{"version":3,"file":"static/js/666.79902c50.chunk.js","mappings":"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","sources":["webpack://deploy/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://deploy/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://deploy/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://deploy/./src/components/Profile/ProfileInfo/ProfileStatus.module.css?417b","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","webpack://deploy/./src/components/Profile/ProfileInfo/ProfileDataForm.module.css?5c5c","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__EGwzF\",\"posts\":\"MyPosts_posts__PPBNw\",\"textArea\":\"MyPosts_textArea__Am+tz\",\"textPost\":\"MyPosts_textPost__taStg\",\"postForm\":\"MyPosts_postForm__1hslB\",\"textareaPost\":\"MyPosts_textareaPost__Hh4Xy\",\"buttonPost\":\"MyPosts_buttonPost__a1Pka\",\"glitch\":\"MyPosts_glitch__mavES\",\"changePhoto\":\"MyPosts_changePhoto__jwFN2\",\"postimg\":\"MyPosts_postimg__pEr0z\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__wvwNZ\",\"message\":\"Post_message__lj2l1\",\"post\":\"Post_post__mzyAp\"};","import React, {useState, useEffect} from \"react\";\nimport s from \"./Post.module.css\";\nimport { useStore } from \"react-redux\";\nimport { getDownloadURL, ref } from \"firebase/storage\";\nimport { storage } from \"../../../../firebase\";\n\nconst Post = (props) => {\n  const [url, setUrl] = useState(null)\n\n  useEffect(() => {\n    \n    if (props.image) {\n      const starsRef = ref(storage, 'posts/' + props.image)\n    getDownloadURL(starsRef).then((urll) => {\n      setUrl(urll)\n      console.log(props.image)\n      // console.log(props.createdAt.toLocaleDateString())\n    })\n    }\n  }, [])\n  \n  return (\n    <div className={s.post}>\n      <div className={s.nick}>{props.nick ? props.nick: false}</div>\n      <div>{props.createdAt}</div>\n      <div className={s.item}>\n        {props.avatar ? <img\n        alt=\"\"\n        src={props.avatar}\n      /> : <img\n      alt=\"\"\n      src=\"https://w7.pngwing.com/pngs/911/1005/png-transparent-ninja-computer-icons-avatar-samurai-ninja-cartoon-desktop-wallpaper-mix.png\"/>}\n      \n      \n      <div className={s.message}>{props.message}</div>\n    </div>\n    <img style={{height: '300px'}}\n        alt=\"\"\n        src={url}\n      />\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\nimport { useTranslation } from \"react-i18next\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { database, storage } from \"../../../firebase\";\nimport { AuthAPI, profileAPI } from \"../../../api/api\";\nimport { AppContext } from \"../../context/context\";\nimport { ref, uploadBytes } from \"firebase/storage\";\n\nlet maxLength10 = maxLengthCreator(50);\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((p) => (\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\n  ));\n  const { posts, setPosts, myId } = useContext(AppContext);\n  // const [posts, setPosts] = useState(null)\n\n  const [value, setValue] = useState(\"\");\n\n  // let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    const lng = localStorage.getItem(\"lg\");\n    i18n.changeLanguage(lng);\n    posts.filter((p) => {\n      console.log(p?.image)\n    })\n  }, [posts]);\n\n  const lng = navigator.language;\n\n  return (\n    <div className={s.postBlock}>\n      <h3 className={s.textPost}>{t(\"myPosts.createPost\")}</h3>\n      {/* <AddNewPostFormRedux onSubmit={onAddPost}/> */}\n      <AddNewPostFormSultan id={myId} value={value} setValue={setValue} />\n      {posts ? (\n        <div className={s.posts}>\n          {posts.map((p) => (\n            <Post key={p.userId} message={p.message} createdAt={p?.createdAt} nick={p?.nick} avatar={p?.avatar} image={p?.image} likesCount={\"100\"} />\n          ))}\n        </div>\n      ) : (\n        false\n      )}\n    </div>\n  );\n});\n\nconst AddNewPostForm = ({ props }) => {\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    const lng = navigator.language;\n    i18n.changeLanguage(lng);\n    \n  }, []);\n\n\n  return (\n    <form className={s.postForm} onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          className={s.textareaPost}\n          name=\"newPostText\"\n          component={Textarea}\n          placeholder={t(\"myPosts.createPost\")}\n        />\n      </div>\n      <div>\n        <button className={s.buttonPost}>{t(\"myPosts.send\")}</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddNewPostFormSultan = ({ id, value, setValue }) => {\n  // const[post, setPost] = useState('')\n  const { t, i18n } = useTranslation();\n  const [photo1, setPhoto] = useState(null)\n  const {photo, nick} = useContext(AppContext)\n\n  useEffect(() => {\n    const lng = navigator.language;\n    i18n.changeLanguage(lng);\n  }, []);\n\n  const lng = navigator.language;\n  const sendPost = async() => {\n    try {\n      const name = new Date().toString() + \"post\"\n      \n      const response = await fetch(photo1)\n      const blob = await response.blob()\n\n      let storageRef = ref(storage, \"posts/\" + name)\n\n      uploadBytes(storageRef, blob).then(() => {\n        addDoc(collection(database, \"posts\"), {\n          nick: nick,\n          avatar: photo,\n          userId: id,\n          message: value,\n          createdAt: new Date().toLocaleString(),\n          image: name\n        });\n      })\n      setValue('')\n      setPhoto(null)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files[0]) {\n      setPhoto(e.target.files[0].file)\n      console.log(e.target.files[0].file)\n    }\n  };\n\n  const showFile = async (e) => { \n\n    e.preventDefault() \n\n    const reader = new FileReader() \n\n    reader.onload = async (e) => { \n\n      const text = (e.target.result) \n\n       console.log(text) \n       setPhoto(text)\n\n\n    }; \n\n    \n    reader.readAsDataURL(e.target.files[0])\n\n }\n\n  return (\n    <div>\n      <form className={s.postForm}>\n        <div>\n          {photo1 ? <img className={s.postimg} src={photo1} alt=\"\"/> : false}\n          \n          <input\n            className={s.textareaPost}\n            placeholder={t(\"myPosts.createPost\")}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </div>\n      </form>\n      <button onClick={sendPost} className={s.buttonPost}>\n        {t(\"myPosts.send\")}\n      </button>\n      <input\n        className={s.changePhoto}\n        type={\"file\"}\n        onChange={showFile}\n      ></input>\n    </div>\n  );\n};\n\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\n  AddNewPostForm\n);\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__LrTnN\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9Fw0F\",\"mainPhoto\":\"ProfileInfo_mainPhoto__Rg+rA\",\"contact\":\"ProfileInfo_contact__-Pia4\",\"img\":\"ProfileInfo_img__unL4V\",\"wallpaper\":\"ProfileInfo_wallpaper__BoAoz\",\"profileData\":\"ProfileInfo_profileData__9bE5l\",\"name\":\"ProfileInfo_name__C0wlm\",\"spanInfo\":\"ProfileInfo_spanInfo__lbvRp\",\"changePhoto\":\"ProfileInfo_changePhoto__ZUsbN\",\"Btn\":\"ProfileInfo_Btn__XHMLr\",\"svg\":\"ProfileInfo_svg__Jk2uF\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputStatus\":\"ProfileStatus_inputStatus__Bt-lf\",\"status\":\"ProfileStatus_status__DaJgl\"};","import React, { useEffect, useState } from \"react\";\nimport s from \"./ProfileStatus.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  const {t, i18n} = useTranslation();\n\n    useEffect(() => {\n        const lng = navigator.language;\n        i18n.changeLanguage(lng);\n    }, [])\n\n    const lng = navigator.language;\n\n  return (\n    <div className={s.status}>\n      {!editMode && (\n        <div>\n          <b>{t('profileStatus.myStatus')}</b>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \" ---------\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <b>{t('profileStatus.myStatus')}</b>\n          <input\n            onChange={onStatusChange}\n            value={status}\n            className={s.inputStatus}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","// extracted by mini-css-extract-plugin\nexport default {\"formSave\":\"ProfileDataForm_formSave__pTnI6\",\"spanInfo\":\"ProfileDataForm_spanInfo__mtt+U\",\"button2\":\"ProfileDataForm_button2__x5n4F\"};","import React from \"react\";\nimport { useEffect } from 'react';\nimport {Input, createField} from \"../../common/FormsControls/FormsControls\";\nimport { reduxForm } from \"redux-form\";\nimport s from \"./ProfileDataForm.module.css\"\nimport { useTranslation } from \"react-i18next\";\n\nconst ProfileDataForm = ({handleSubmit, profile}) => {\n\n  const {t ,i18n} = useTranslation();\n\n  useEffect(() => {\n      const lng = localStorage.getItem('lg')\n      i18n.changeLanguage(lng);\n  }, [])\n\n  const lng = navigator.language;\n\n  return (\n    <form className={s.formSave} onSubmit={handleSubmit}>\n      <div className={s.spanInfo}>{t('ProfileDataForm.baseInfo')}</div>\n      <div style={{marginBottom: \"30px\"}}>\n        <b>{t('ProfileDataForm.fio')}</b> {createField(\"ФИО\", \"fullName\", [], Input)}\n      </div>\n      <div style={{marginBottom: \"30px\"}}>\n        <b>{t('ProfileDataForm.lookingJob')}</b> {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\n      </div>\n      <div style={{marginBottom: \"30px\"}}>\n        <b>{t('ProfileDataForm.skill')}</b>\n        {createField(\"Мои профессиональные навыки\", \"lookingForAJobDescription\", [], Input)}\n      </div>\n      <div style={{marginBottom: \"15px\"}}>\n        <b>{t('ProfileDataForm.aboutMe')} </b>\n        {createField(\"Обо мне\", \"aboutMe\", [], Input)}\n      </div>\n      <div>\n        <button className={s.button2}>{t('ProfileDataForm.save')}</button>\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;\n","import React, { useState } from \"react\";\nimport Preloader from \"../../common/Preloader/Loader\";\nimport s from \"./ProfileInfo.module.css\";\nimport { useEffect } from 'react';\n// import ProfileStatus from \"./ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files[0]) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData);\n    setEditMode(false);\n  };\n\n  return (\n    <div className={s.profileInfo}>\n      <img\n        className={s.wallpaper}\n        src=\"https://wallpapercave.com/wp/wp8695009.jpg\"\n        alt=\"wallpaper\"\n      />\n      <div className={s.descriptionBlock}>\n        <img\n          alt=\"\"\n          src={profile.photos.large || userPhoto}\n          className={s.mainPhoto}\n        />\n        {isOwner && (\n          <input\n            className={s.changePhoto}\n            type={\"file\"}\n            onChange={onMainPhotoSelected}\n          ></input>\n        )}\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        {editMode ? (\n          <ProfileDataForm\n            initialValues={profile}\n            profile={profile}\n            onSubmit={onSubmit}\n          />\n        ) : (\n          <ProfileData\n            goToEditMode={() => {\n              setEditMode(true);\n            }}\n            profile={profile}\n            isOwner={isOwner}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\n//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n\n  const {t ,i18n} = useTranslation();\n\n  useEffect(() => {\n      const lng = localStorage.getItem('lg')\n      i18n.changeLanguage(lng);\n  }, [])\n\n  const lng = navigator.language;\n\n  return (\n    <div className={s.profileData}>\n      <div className={s.name}>{profile.fullName}</div>\n      <div className={s.spanInfo}>{t('ProfileDataForm.baseInfo')}</div>\n      <div style={{marginBottom: \"30px\"}}>\n        <b>{t('ProfileDataForm.lookingJob')}</b> {profile.lookingForAJob ? \"+\" : \"-\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div style={{marginBottom: \"30px\"}}>\n          <b>{t('ProfileDataForm.skill')} </b> {profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div style={{marginBottom: \"15px\"}}>\n        <b>{t('ProfileDataForm.aboutMe')} </b> {profile.aboutMe}\n      </div>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode} className={s.Btn}>\n            {t('changeYesNo.change')}\n            <svg className={s.svg} viewBox=\"0 0 512 512\">\n              <path d=\"M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1v32c0 8.8 7.2 16 16 16h32zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z\"></path>\n            </svg>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React, {useContext, useEffect} from \"react\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport { useTranslation } from \"react-i18next\";\nimport { AppContext } from \"../context/context\";\n\n\nconst Profile = (props) => {\n  const {i18n} = useTranslation();\n  const{loginPostData, myId} = useContext(AppContext)\n\n    useEffect(() => {\n        if (props.isOwner) {\n          loginPostData(myId, true)\n        }\n        else{\n          loginPostData(myId, false)\n        }\n        const lng = localStorage.getItem('lg')\n        i18n.changeLanguage(lng);\n    }, [])\n\n  return (\n    <div>\n      <ProfileInfo\n        savePhoto={props.savePhoto}\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        saveProfile={props.saveProfile}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n  }\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\nimport Profile from \"./Profile\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { withAuthNavigate } from \"../../hoc/withAuthNavigate\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n              {...this.props}\n              isOwner={!this.props.router.params.userId}\n              profile={this.props.profile}\n              status={this.props.status}\n              updateStatus={this.props.updateStatus}\n              savePhoto={this.props.savePhoto}\n            />\n      \n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n  withRouter,\n  withAuthNavigate\n)(ProfileContainer);\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\n"],"names":["props","useState","url","setUrl","useEffect","image","starsRef","ref","storage","getDownloadURL","then","urll","console","log","className","s","nick","createdAt","avatar","alt","src","message","style","height","MyPosts","maxLengthCreator","React","posts","map","p","likesCount","id","useContext","AppContext","myId","setPosts","value","setValue","useTranslation","t","i18n","lng","localStorage","getItem","changeLanguage","filter","navigator","language","AddNewPostFormSultan","userId","photo1","setPhoto","photo","sendPost","name","Date","toString","fetch","response","blob","storageRef","uploadBytes","addDoc","collection","database","toLocaleString","showFile","e","preventDefault","reader","FileReader","onload","text","target","result","readAsDataURL","files","placeholder","onChange","onClick","type","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","connect","state","profilePage","newPostText","dispatch","addPost","addPostActionCreator","editMode","setEditMode","status","setStatus","onDoubleClick","currentTarget","autoFocus","onBlur","updateStatus","profile","marginBottom","createField","Input","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","viewBox","d","savePhoto","saveProfile","photos","large","userPhoto","initialValues","formData","loginPostData","ProfileContainer","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate"],"sourceRoot":""}